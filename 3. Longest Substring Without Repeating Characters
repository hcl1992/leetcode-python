"""
Given a string, find the length of the longest substring without repeating characters.

Examples:

Given "abcabcbb", the answer is "abc", which the length is 3.

Given "bbbbb", the answer is "b", with the length of 1.

Given "pwwkew", the answer is "wke", with the length of 3. 
Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
"""
class Solution(object):
    def lengthOfLongestSubstring(self, s):
        ans=0 #initialize length
        left=0 #initial last repeating index
        dict={} #create an empty dictionary
        for i in range(len(s)):
            if s[i] in dict and dict[s[i]] >= left:
                left = dict[s[i]]+1
                #update the last repeating index
            dict[s[i]]=i
            ans=max(ans,i-left+1)
        return ans
